# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import random_pb2 as random__pb2


class RandNumGenStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getNum = channel.unary_unary(
                '/randomNumberGenerator.RandNumGen/getNum',
                request_serializer=random__pb2.MinMax.SerializeToString,
                response_deserializer=random__pb2.RandNum.FromString,
                )


class RandNumGenServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getNum(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RandNumGenServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getNum': grpc.unary_unary_rpc_method_handler(
                    servicer.getNum,
                    request_deserializer=random__pb2.MinMax.FromString,
                    response_serializer=random__pb2.RandNum.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'randomNumberGenerator.RandNumGen', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RandNumGen(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getNum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/randomNumberGenerator.RandNumGen/getNum',
            random__pb2.MinMax.SerializeToString,
            random__pb2.RandNum.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
